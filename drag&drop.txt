#include <GL/glut.h>

// Flower position
GLfloat flowerX = 0.0;
GLfloat flowerY = 0.0;

// Mouse state
bool isDragging = false;
GLfloat initialMouseX, initialMouseY;

void drawFlower() {
    glPushMatrix();
    glTranslatef(flowerX, flowerY, 0);
    
    // Draw the flower here
    // ...
    
    glPopMatrix();
}

void display() {
    glClear(GL_COLOR_BUFFER_BIT);
    
    // Draw the flower
    drawFlower();
    
    glFlush();
}

void mouse(int button, int state, int x, int y) {
    if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN) {
        // Check if the click is within the flower's bounds
        if (x >= flowerX && x <= flowerX + flowerWidth &&
            y >= flowerY && y <= flowerY + flowerHeight) {
            isDragging = true;
            initialMouseX = x;
            initialMouseY = y;
        }
    } else if (button == GLUT_LEFT_BUTTON && state == GLUT_UP) {
        isDragging = false;
    }
}

void motion(int x, int y) {
    if (isDragging) {
        // Update the flower's position based on mouse movement
        flowerX += x - initialMouseX;
        flowerY -= y - initialMouseY;  // Note the y-coordinate adjustment due to OpenGL's inverted y-axis
        initialMouseX = x;
        initialMouseY = y;
        glutPostRedisplay();  // Request a redraw
    }
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(800, 800);
    glutCreateWindow("Draggable Flower in OpenGL");
    
    glutDisplayFunc(display);
    glutMouseFunc(mouse);
    glutMotionFunc(motion);
    
    glutMainLoop();
    return 0;
}
