#include <GL/glut.h>
#include <cmath>

void drawPetal() {
    glPushMatrix();

    glBegin(GL_POLYGON);
    glColor3f(1.0, 0.0, 0.0);  // Red color for the petal

    // Define the control points for the Bezier curve
    float p0[2] = {0.0, 0.0};
    float p1[2] = {0.1, 0.2};
    float p2[2] = {-0.1, 0.2};
    float p3[2] = {0.0, 0.6};

    for (int i = 0; i <= 100; i++) {
        float t = i / 100.0;
        float u = 1.0 - t;

        float x = u * u * u * p0[0] + 3 * u * u * t * p1[0] + 3 * u * t * t * p2[0] + t * t * t * p3[0];
        float y = u * u * u * p0[1] + 3 * u * u * t * p1[1] + 3 * u * t * t * p2[1] + t * t * t * p3[1];

        glVertex2f(x, y);
    }

    glEnd();
    
    glPopMatrix();
}

void display() {
    glClear(GL_COLOR_BUFFER_BIT);

    // Draw a single petal
    drawPetal();

    glFlush();
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(800, 800);
    glutCreateWindow("Petal Shape in OpenGL");
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;
}
